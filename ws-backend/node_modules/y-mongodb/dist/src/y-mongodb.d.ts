export class MongodbPersistence {
    /**
     * @param {string} location
     * @param {string} [collection]
     */
    constructor(location: string, collection?: string | undefined);
    tr: Promise<any>;
    _transact: (f: any) => Promise<any>;
    /**
     * @param {string} docName
     * @return {Promise<Y.Doc>}
     */
    getYDoc(docName: string): Promise<Y.Doc>;
    /**
     * @param {string} docName
     * @param {Uint8Array} update
     * @return {Promise<number>} Returns the clock of the stored update
     */
    storeUpdate(docName: string, update: Uint8Array): Promise<number>;
    /**
     * @param {string} docName
     * @return {Promise<void>}
     */
    clearDocument(docName: string): Promise<void>;
    /**
     * @param {string} docName
     * @return {Promise<void>}
     */
    flushDocument(docName: string): Promise<void>;
    flushDB(): Promise<any>;
}
import * as Y from "yjs";
//# sourceMappingURL=y-mongodb.d.ts.map